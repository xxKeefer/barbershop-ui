import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'

import { Hero, Layout } from '~/components'
import { API } from '~/constants'
import { BarbersResponse, HeroResponse, HomePageRequest } from '~/types'
import { callApi } from '~/utils'

type Props = {
    data: {
        barber: BarbersResponse['data']
        hero: HeroResponse['data']['attributes']
    }
    preview: boolean
}

const Home: NextPage<Props> = ({ data, preview }) => {
    const { barber, hero } = data
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <Layout preview={preview}>
                    <Hero attributes={hero} />
                    {barber.map(({ attributes, id }) => (
                        <div key={id}>
                            <Image
                                src={`${API.strapiBase}${attributes.photo.data.attributes.url}`}
                                alt={attributes.name}
                                width={200}
                                height={200}
                            />
                            <h2>{attributes.name}</h2>
                            <p>{attributes.bio}</p>
                        </div>
                    ))}
                </Layout>
            </main>
        </>
    )
}

export default Home

export const getStaticProps: GetStaticProps = async ({ preview }) => {
    const homePage = await callApi<HomePageRequest>(
        `${API.strapi}/home?populate=*`,
        {},
        preview,
    )
    const heroId = homePage?.data.attributes.hero.data.id

    const hero = await callApi<HeroResponse>(
        `${API.strapi}/heroes/${heroId}?populate=*`,
        {},
        preview,
    )
    console.log({ hero })
    const barber = await callApi<BarbersResponse>(
        `${API.strapi}/barbers?populate=*`,
        {},
        preview,
    )

    return {
        props: {
            data: {
                barber: barber?.data ?? [],
                hero: hero?.data.attributes ?? [],
            },
            preview: !!preview,
        },
    }
}
